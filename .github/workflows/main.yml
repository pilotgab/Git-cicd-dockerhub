name: Node.js CI/CD
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        push: false
        tags: |
          docker.io/captaingab/appimage:latest
          ${{ secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/vprofile-app-img:latest

  docker-push:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push Docker image to Docker Hub
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: |
          docker.io/captaingab/appimage:latest

  ecr-login:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{secrets.AWS_REGION}}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
          mask-password: 'true'

  ecr-push:
    runs-on: ubuntu-latest
    needs: ecr-login
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{secrets.AWS_REGION}}
    
    - name: Build Docker Image
      run: |
       docker build -t captaingab/appimage:latest 
       docker tag captaingab/appimage:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/vprofile-app-img:latest
       env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}


    - name: Push Docker image to Amazon ECR
      id: push-ecr
      run: |
        docker push ${{ secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/vprofile-app-img:latest
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

  eks-deploy:
    runs-on: ubuntu-latest
    needs: ecr-push
    steps:
     - name: Set up kubectl
       uses: azure/setup-kubectl@v1
       with:
          version: 'latest'
     - name: Install Helm
       run: |
         curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash -
         env:
          KUBECONFIG_CONTENTS: ${{ secrets.KUBECONFIG }}
     - name: Deploy to Amazon EKS using Helm
       run: |
         helm upgrade --install vprofile applechat --set image.repository=${{ secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/vprofile-app-img,image.tag=latest --kubeconfig=$KUBECONFIG_CONTENTS --namespace=prod
